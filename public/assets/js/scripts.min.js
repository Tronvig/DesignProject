/*!
 * DesignProject
 * Form Creation App
 * https://github.com/Tronvig/DesignProject/
 * @author Matt Tronvig
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(e,o,t,n){"use strict";e(function(){function n(){var n=e(o).scrollTop();Math.abs(c-n)<=m||(n>c&&n>d?e("header").removeClass("header--down").addClass("header--up"):n+e(o).height()<e(t).height()&&e("header").removeClass("header--up").addClass("header--down"),c=n)}function a(){e(".mobile-nav").removeClass("animate-inFromRight"),e(".mobile-nav").addClass("animate-outToLeft"),e(".mobile-nav").removeClass("active"),e(".icon__hamburger").removeClass("active"),setTimeout(function(){e("body").removeClass("menu-open")},1200)}function i(){e(".icon__hamburger").addClass("active"),e("body").toggleClass("menu-open"),e(".mobile-nav").toggleClass("active"),e(".mobile-nav").removeClass("animate-outToLeft"),e(".mobile-nav").addClass("animate-inFromRight");var o=["nav__item--1","nav__item--2","nav__item--3","nav__item--4","nav__item--5","nav__item--6","nav__item--7","nav__item--8","nav__item--9"];e(".nav__level .nav__item").each(function(t,n){e(n).addClass(o[t])})}function r(o){e("body").hasClass(o)||(e("body").removeClass(),e(".signup").removeClass("active"),e(".login").removeClass("active"),e(".auth").removeClass("active"),e(".prospect").removeClass("active"),e("body").addClass("forms-open"),e("body").addClass(o),e(".forms").addClass("active"),e(o).addClass("active")),p&&(a(),p=!p),v=!0}function s(o){v&&(e("body").toggleClass("forms-open"),e("body").toggleClass(o),e(".forms").toggleClass("active"),e(o).toggleClass("active")),v=!v}function l(){e(".provider").addClass("on"),e(".credentials").removeClass("on"),e(".terms").removeClass("on")}new Rellax(".rellax");e(o).on("load",function(){e("body").removeClass("preload")});var u,c=0,m=5,d=e("header").outerHeight();e(o).scroll(function(){u=!0}),setInterval(function(){u&&(n(),u=!1)},250),e("label input").on("focus",function(){var o=e(this).val();o.length<1&&e(this).parent().toggleClass("on")});var p=!1;e(".icon__hamburger").on("click",function(){p?a():i(),p=!p});var v=!1;e(".menu--login").click(function(){return r(".login"),!1}),e(".mobile-nav--login").click(function(){return r(".login"),!1}),e(".signup--login").click(function(){return r(".login"),!1}),e(".menu--signup").click(function(){return r(".signup"),!1}),e(".mobile-nav--signup").click(function(){return r(".signup"),!1}),e(".login--signup").click(function(){return r(".signup"),!1}),e(".cta--signup").click(function(){return r(".signup"),!1}),e(".login--dismiss").click(function(){return s(".login"),!1}),e(".signup--dismiss").click(function(){return s(".signup"),l(),!1}),e(".prospect--dismiss").click(function(){return s(".prospect"),l(),!1}),e(".auth--dismiss").click(function(){return s(".auth"),l(),!1}),e(".success--dismiss").click(function(){return s(".success"),!1}),e(".attribution").click(function(o){o.preventDefault(),e(".provider").toggleClass("on"),e(".credentials").toggleClass("on");var t=e(this).attr("id");e("#attribution").val(t),e('input[name="attributionProvider"]').val(t),"Adjust"===t||"Appsflyer"===t?(e(".attr-provider").text(t+" as your attribution provider"),s(".signup"),r(".prospect")):"None"===t&&(e(".attr-provider").text("no attribution provider"),s(".signup"),r(".prospect"))}),e(".show-terms").click(function(o){o.preventDefault(),e(".credentials").toggleClass("on"),e(".terms").toggleClass("on")});var g="https://mv-managerapi.tune.com",f="https://app.multiverse.com";e("#signupForm").submit(function(t){e("#signupForm .error").hide(),e(".terms").toggleClass("on"),t.preventDefault();var n=e(this),a=n.find('input[name="FirstName"]').val(),i=n.find('input[name="LastName"]').val(),s=n.find('input[name="Company"]').val(),l=n.find('input[name="email"]').val(),u=n.find('input[name="pass"]').val(),c=n.find('input[name="attribution"]').val(),m=(n.attr("action"),e.ajax({type:"POST",url:g+"/session",contentType:"application/json",data:JSON.stringify({email:l,password:u})}));m.done(function(t){if("undefined"!=typeof t.token&&"undefined"!=typeof t.token.type&&null!==t.token.type&&"2factor"==t.token.type&&null!==t.token.token){e("body").removeClass("loading");var n=t.token.token;e("#twoFactorForm").attr("auth_token",n),e("#twoFactorForm").attr("email",l),r(".auth")}else{var u=t.token.token;createCookie("sessionCookie",u);var m=MktoForms2.getForm(1099);m.addHiddenFields({FirstName:a,LastName:i,Company:s,Email:l,attributionProvider:c}),m.submit(),m.onSuccess(function(e,t){return o.location.replace(f+"/login/"+u),!1})}}),m.error(function(o,t){var n=418===o.status?"Error: Unfortunately, only TMC AA users with administrator permissions may use Multiverse. Please work with a team member that has administrator access to use Multiverse.":"Failed to authenticate. Please check your e-mail and password.";e("body").removeClass("loading"),e(".credentials").toggleClass("on"),e("#signupForm .error").text(n),e("#signupForm .error").show()})}),e("#login").submit(function(t){e("body").addClass("loading"),e("#loginForm .error").hide(),t.preventDefault();var n=e(this),a=n.find('input[name="email"]').val(),i=n.find('input[name="pass"]').val(),s=e.ajax({type:"POST",url:g+"/session",contentType:"application/json",data:JSON.stringify({email:a,password:i})});s.done(function(t){if("undefined"!=typeof t.token&&"undefined"!=typeof t.token.type&&null!==t.token.type&&"2factor"==t.token.type&&null!==t.token.token){e("body").removeClass("loading");var n=t.token.token;e("#twoFactorForm").attr("auth_token",n),e("#twoFactorForm").attr("email",a),r(".auth")}else{var i=t.token.token;createCookie("sessionCookie",i),o.location.replace(f+"/login/"+i)}}),s.error(function(o,t){r(".login");var n=418===o.status?"Error: Unfortunately, only TMC AA users with administrator permissions may use Multiverse. Please work with a team member that has administrator access to use Multiverse.":"Failed to authenticate. Please check your e-mail and password.";e("body").removeClass("loading"),e("#loginForm .error").text(n),e("#loginForm .error").show()})}),e("#loginForm").submit(function(t){e("body").addClass("loading"),e("#loginForm .error").hide(),t.preventDefault();var n=e(this),a=n.find('input[name="email"]').val(),i=n.find('input[name="pass"]').val(),s=e.ajax({type:"POST",url:g+"/session",contentType:"application/json",data:JSON.stringify({email:a,password:i})});s.done(function(t){if("undefined"!=typeof t.token&&"undefined"!=typeof t.token.type&&null!==t.token.type&&"2factor"==t.token.type&&null!==t.token.token){e("body").removeClass("loading");var n=t.token.token;e("#twoFactorForm").attr("auth_token",n),e("#twoFactorForm").attr("email",a),r(".auth")}else{var i=t.token.token;createCookie("sessionCookie",i),o.location.replace(f+"/login/"+i)}}),s.error(function(o,t){var n=418===o.status?"Error: Unfortunately, only TMC AA users with administrator permissions may use Multiverse. Please work with a team member that has administrator access to use Multiverse.":"Failed to authenticate. Please check your e-mail and password.";e("body").removeClass("loading"),e("#loginForm .error").text(n),e("#loginForm .error").show()})}),e("#twoFactorForm").submit(function(t){e("body").addClass("loading"),e("#twoFactorForm .error").hide(),t.preventDefault();var n=e(this),a=n.find('input[name="code"]').val(),i=(e("#twoFactorForm").attr("email"),e("#twoFactorForm").attr("auth_token")),r=e.ajax({type:"POST",url:g+"/session",contentType:"application/json",data:JSON.stringify({auth_token:i,code:a})});r.done(function(t){if("undefined"!=typeof t.error_msg&&null!==t.error_msg)e("body").removeClass("loading"),e("#twoFactorForm .error").text(t.error_msg),e("#twoFactorForm .error").show();else{var n=t.token.token;createCookie("sessionCookie",n),o.location.replace(f+"/login/"+n)}}),r.error(function(o,t){var n="Failed to authenticate. Invalid verification code.";e("body").removeClass("loading"),e("#twoFactorForm .error").text(n),e("#twoFactorForm .error").show()})});var h=function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var o=new RegExp("[\\?&]"+e+"=([^&#]*)"),t=o.exec(location.search);return null===t?"":decodeURIComponent(t[1].replace(/\+/g," "))},k=h("message");"thank-you"===k&&r(".success")})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
